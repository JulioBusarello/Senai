#Comandos para criar o banco de dados e dados para inserir para realizar as consultas
#Cria a tabela caso ela não exista
CREATE DATABASE IF NOT EXISTS db_tecnico;

#Força o uso da tabela
USE db_tecnico;

CREATE TABLE GRADE_SALARIAL (
	ID_GRADE_SALARIAL INT NOT NULL PRIMARY KEY,
	MENOR_SALARIO DECIMAL(10,2) NOT NULL,
	MAIOR_SALARIO DECIMAL(10,2) NOT NULL
);

CREATE TABLE DEPARTAMENTO (
	ID_DEPARTAMENTO INT NOT NULL PRIMARY KEY,
	NM_DEPARTAMENTO VARCHAR(30) NOT NULL,
	LOCALIZACAO VARCHAR(20) NOT NULL
);

CREATE TABLE EMPREGADO (
	ID_EMPREGADO INT NOT NULL PRIMARY KEY,
	NM_EMPREGADO VARCHAR(45) NOT NULL,
	FUNCAO VARCHAR(45) NOT NULL,
	LIDER INTEGER NULL,
	DATA_CONTRATACAO DATE NOT NULL,
	SALARIO DECIMAL(10,2) NOT NULL,
	COMISSAO DECIMAL(10,2) NULL,
	ID_DEPARTAMENTO INTEGER NOT NULL,
	FOREIGN KEY(ID_DEPARTAMENTO) REFERENCES DEPARTAMENTO(ID_DEPARTAMENTO),
	FOREIGN KEY(LIDER) REFERENCES EMPREGADO(ID_EMPREGADO)
);

#Inserindo dados na tabela departamento
INSERT INTO DEPARTAMENTO VALUES (10,'CONTÁBIL','NEW YORK');
INSERT INTO DEPARTAMENTO VALUES (20,'PESQUISA E DESENVOLVIMENTO','DALLAS');
INSERT INTO DEPARTAMENTO VALUES (30,'VENDAS','CHICAGO');
INSERT INTO DEPARTAMENTO VALUES (40,'OPERAÇÕES','BOSTON');

#Inserindo dados na tabela empregado
INSERT INTO EMPREGADO VALUES (7839,'KING','PRESIDENTE',NULL,'1981-11-17',5000,NULL,10);
INSERT INTO EMPREGADO VALUES (7698,'BLAKE','GERENTE',7839,'1981-05-01',2850,NULL,30);
INSERT INTO EMPREGADO VALUES (7782,'CLARK','GERENTE',7839,'1981-06-09',2450,NULL,10);
INSERT INTO EMPREGADO VALUES (7566,'JONES','GERENTE',7839,'1981-07-02',2975,NULL,20);
INSERT INTO EMPREGADO VALUES (7654,'MARTIN','VENDEDOR',7698,'1981-09-28',1250,1400,30);
INSERT INTO EMPREGADO VALUES (7499,'ALLEN','VENDEDOR',7698,'1981-02-20',1600,300,30);
INSERT INTO EMPREGADO VALUES (7844,'TURNER','VENDEDOR',7698,'1981-09-08',1500,0,30);
INSERT INTO EMPREGADO VALUES (7900,'JAMES','ESCRITURÁRIO',7698,'1981-12-03',950,NULL,30);
INSERT INTO EMPREGADO VALUES (7521,'WARD','VENDEDOR',7698,'1981-02-22',1250,500,30);
INSERT INTO EMPREGADO VALUES (7902,'FORD','ANALISTA',7566,'1981-12-03',3000,NULL,20);
INSERT INTO EMPREGADO VALUES (7369,'SMITH','ESCRITURÁRIO',7902,'1980-12-17',800,NULL,20);
INSERT INTO EMPREGADO VALUES (7788,'SCOTT','ANALISTA',7566,'1982-12-09',3000,NULL,20);
INSERT INTO EMPREGADO VALUES (7876,'ADAMS','ESCRITURÁRIO',7788,'1983-01-12',1100,NULL,20);
INSERT INTO EMPREGADO VALUES (7934,'MILLER','ESCRITURÁRIO',7782,'1982-01-23',1300,NULL,10);
INSERT INTO empregado VALUES (1722, 'JULIO','PROGRAMADOR',NULL,'2024-01-21',7200,NULL, 20);

#Inserindo dados na tabela grade_salarial
INSERT INTO GRADE_SALARIAL VALUES (1,700,1200);
INSERT INTO GRADE_SALARIAL VALUES (2,1201,1400);
INSERT INTO GRADE_SALARIAL VALUES (3,1401,2000);
INSERT INTO GRADE_SALARIAL VALUES (4,2001,3000);
INSERT INTO GRADE_SALARIAL VALUES (5,3001,9999);

#Verificando dados com outro nome na coluna
SELECT NM_EMPREGADO NOME, FUNCAO FUNÇÃO, SALARIO "SALÁRIO FIXO" FROM EMPREGADO;

#Selecionando dados selecionados com condições específicas
SELECT NM_EMPREGADO, FUNCAO, SALARIO FROM EMPREGADO WHERE ID_EMPREGADO = 1722;
SELECT NM_EMPREGADO, FUNCAO, SALARIO FROM EMPREGADO WHERE ID_DEPARTAMENTO = 10 AND salario >= 1300;
SELECT NM_EMPREGADO, FUNCAO, SALARIO FROM EMPREGADO WHERE NM_EMPREGADO LIKE '%S'; /* Caso o % esteja no inicio, o nome deve terminar com S('%S'), caso o % esteja no final deve 
começar com S('S%') e ainda se em caso a % esteja antes e depois do S, caso o nome contenha S ele aparecera(%S%), também é possível utilizar o _ para o tanto de letras que o nome deve ter ('____S')*/
SELECT NM_EMPREGADO, FUNCAO, SALARIO FROM EMPREGADO WHERE COMISSAO IS NULL;
SELECT NM_EMPREGADO, FUNCAO, SALARIO FROM EMPREGADO WHERE ID_DEPARTAMENTO IN (10,30);
SELECT NM_EMPREGADO, FUNCAO, SALARIO FROM EMPREGADO WHERE ID_DEPARTAMENTO = 10 OR id_departamento = 30;
SELECT NM_EMPREGADO, FUNCAO, SALARIO FROM EMPREGADO WHERE SALARIO BETWEEN 800 AND 1200; /* salario >= 800 AND salario <= 1200 */
SELECT NM_EMPREGADO, FUNCAO, SALARIO FROM EMPREGADO ORDER BY NM_EMPREGADO ASC; /* ASC, Crescente. DESK "Decrescente" */
SELECT NM_EMPREGADO, FUNCAO, SALARIO FROM EMPREGADO WHERE UPPER(NM_EMPREGADO) LIKE binary 'smit%';

